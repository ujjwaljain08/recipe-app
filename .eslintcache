[{"A:\\react-do\\recipe-app\\src\\index.js":"1","A:\\react-do\\recipe-app\\src\\App.js":"2","A:\\react-do\\recipe-app\\src\\Recipe.js":"3"},{"size":220,"mtime":1611242195696,"results":"4","hashOfConfig":"5"},{"size":2568,"mtime":1611340677613,"results":"6","hashOfConfig":"5"},{"size":4675,"mtime":1611340339116,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iv1qhx",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"A:\\react-do\\recipe-app\\src\\index.js",[],"A:\\react-do\\recipe-app\\src\\App.js",["15","16"],"A:\\react-do\\recipe-app\\src\\Recipe.js",["17","18","19","20","21","22","23","24","25"],"import React,{useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {AppBar} from \"@material-ui/core\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n \r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n        margin:30,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    }, \r\n    space: {\r\n        margin: theme.spacing(1),\r\n      },\r\n      appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n     \r\n  }));\r\n\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n\r\nexport default function Recipe({title,colories,image,ingredients,healthLabels}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [Save, setSave] = useState([]);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    const handleSave=()=>{\r\n        \r\n    }\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n      };\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n      \r\n    return (\r\n        <div>\r\n            \r\n            \r\n             {/* Card */}\r\n        <Card className={classes.root} p={4}>\r\n\r\n        <CardHeader style={{height:\"40px\",padding:\"50px\"}}\r\n        title={title}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent >\r\n       \r\n          {\r\n              healthLabels.map(tags=>(\r\n                <Chip  variant=\"outlined\" className={classes.space}  label={tags} style={{color:\"pink\",backgroundColor:\"black\"}} />\r\n                 \r\n              ))\r\n          }\r\n      \r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton \r\n          onClick={handleClickOpen}>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n     \r\n    </Card>\r\n            {/* Dialog */}\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n\r\n\r\n\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n            Detailed Recipe \r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem>\r\n              <ol>\r\n                  {\r\n                      ingredients.map(ingredient=>(\r\n                       <li> <ListItemText primary={ingredient.text} /> </li>\r\n                     \r\n                    ))\r\n                  }\r\n              </ol>\r\n              <Divider />\r\n              <Divider />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n       \r\n</div>\r\n    )\r\n}\r\n",{"ruleId":"26","severity":1,"message":"27","line":10,"column":9,"nodeType":"28","messageId":"29","endLine":10,"endColumn":12},{"ruleId":"30","severity":1,"message":"31","line":46,"column":5,"nodeType":"32","endLine":46,"endColumn":7,"suggestions":"33"},{"ruleId":"26","severity":1,"message":"34","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":12},{"ruleId":"26","severity":1,"message":"35","line":11,"column":8,"nodeType":"28","messageId":"29","endLine":11,"endColumn":16},{"ruleId":"26","severity":1,"message":"36","line":16,"column":8,"nodeType":"28","messageId":"29","endLine":16,"endColumn":20},{"ruleId":"26","severity":1,"message":"37","line":17,"column":9,"nodeType":"28","messageId":"29","endLine":17,"endColumn":23},{"ruleId":"26","severity":1,"message":"38","line":28,"column":8,"nodeType":"28","messageId":"29","endLine":28,"endColumn":13},{"ruleId":"26","severity":1,"message":"39","line":74,"column":12,"nodeType":"28","messageId":"29","endLine":74,"endColumn":16},{"ruleId":"26","severity":1,"message":"40","line":74,"column":18,"nodeType":"28","messageId":"29","endLine":74,"endColumn":25},{"ruleId":"26","severity":1,"message":"41","line":83,"column":11,"nodeType":"28","messageId":"29","endLine":83,"endColumn":21},{"ruleId":"26","severity":1,"message":"42","line":86,"column":11,"nodeType":"28","messageId":"29","endLine":86,"endColumn":28},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.","ArrayExpression",["43"],"'clsx' is defined but never used.","'Collapse' is defined but never used.","'FavoriteIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Badge' is defined but never used.","'Save' is assigned a value but never used.","'setSave' is assigned a value but never used.","'handleSave' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.",{"desc":"44","fix":"45"},"Update the dependencies array to be: [getRecipe]",{"range":"46","text":"47"},[1043,1045],"[getRecipe]"]